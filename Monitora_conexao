#!/usr/bin/tclsh

# Autor: MINEMAM
# 24/01/2021
# Sobre: Mostra as conexões de rede, usando como base o arquivo "/proc/net/tcp"
# BSD-3-Clause License 


#------------Funçoes----------------

# Converte hexadecimal(little-edian) para decimal 
proc hex_to_dec { hex } {
	set cont 0
	set hex_lista {}
	# Reordena o valor hexadecimal(little-edian) para convertelo
	while { $cont != [ string length $hex ] } {
		set hex_conv [ string index $hex $cont ]
		set par [ regexp {([02468])} $cont par_m ]
		if { $par == 1} {
			set indice [ expr $cont + 1 ]
			set hex_lista [ linsert $hex_lista $indice $hex_conv ]
		} else {
			set indice [ expr $cont - 1 ]
			set hex_lista [ linsert $hex_lista $indice $hex_conv ]
		}
		incr cont
	}
	# Inverte a ordem da lista
	set cont 7
	set indice 0
	set dec_lista {}
	while { $cont != -1 } {
		set var_atu [ lindex $hex_lista $cont ]
		set dec_lista [ linsert $dec_lista $indice $var_atu ]
		incr cont -1
		incr indice
	}
	# Converte hexadecimal para decimal usando o "expr 0x"
	set dec1 [ expr 0x[ lindex $dec_lista 0 ][ lindex $dec_lista 1 ] ]
	set dec2 [ expr 0x[ lindex $dec_lista 2 ][ lindex $dec_lista 3 ] ]
	set dec3 [ expr 0x[ lindex $dec_lista 4 ][ lindex $dec_lista 5 ] ]
	set dec4 [ expr 0x[ lindex $dec_lista 6 ][ lindex $dec_lista 7 ] ]
	set resultado "$dec1.$dec2.$dec3.$dec4"
	return $resultado
}

#------------Inicio-----------------

if { "$argv" == "-u" && [ file exists /proc/net/udp ] } {
	set net_file [ open /proc/net/udp r ]
	puts "Conexão Local:			Conexão Remota:\nUDP:"
} elseif { "$argv" == "-t" && [ file exists /proc/net/tcp ] } {
	set net_file [ open /proc/net/tcp r ]
	puts "Conexão Local:			Conexão Remota:\nTCP:"
} elseif { "$argv" == "-a" && [ file exists /proc/net/udp ] && [ file exists /proc/net/tcp ] } {
	set tcp_file [ open /proc/net/tcp r ]
	set udp_file [ open /proc/net/udp r]
	set tmp_time [ clock format [ clock seconds ] -format {%d%m%y_%H%M%S} ]
	set tmp_file [ open /tmp/net_all_conexao_$tmp_time a+ ]
	puts $tmp_file [ read $tcp_file ]
	puts $tmp_file [ read $udp_file ]
	close $tcp_file
	close $udp_file
	close $tmp_file
	set net_file [ open /tmp/net_all_conexao_$tmp_time r ]
} elseif { $argc == 0 } {
	puts "$argv0: Mostra as conexões de rede\n\n	$argv0 \[opções\]\n	\nOpções:\n	-u Lista as conexões UDP\n	-t Lista as conexões TCP\n	-a Lista as conexoẽs UDP e TCP"
	exit
} else {
	puts "Arquivo não encontrado"
	exit
}

set cont 0
set skip_linha 0
while { ! [ eof "$net_file" ] } {
	if { $cont == 0 } {
		set net_linha [ gets "$net_file" ]
		if { $argv == "-a" } { puts "Conexão Local:			Conexão Remota:\nTCP:" }
	} elseif { $skip_linha == 1 } {
		set net_linha [ gets "$net_file" ]
		puts "UDP:"
		set skip_linha 2
	} else {
		set net_linha [ gets "$net_file" ]
		if { $net_linha == "" && $argv == "-a" && $skip_linha == 0 } {
			set net_linha [ gets "$net_file" ]
			set net_linha [ gets "$net_file" ]
			set skip_linha 1
		} elseif { $net_linha == "" && $argv == "-a" && $skip_linha == 2 } {
			break
		} elseif { $net_linha == "" && $argv != "-a" } {
			break
		}
		# IP:PORTA DE ORIGEM
		set hex_orig [ lindex $net_linha 1 ]
		set hex_ip_o [ string range $hex_orig 0 7 ]
		set ip_local [ hex_to_dec $hex_ip_o ]
		set porta_local [ expr 0x[ string range $hex_orig 9 12 ] ]
		# IP:PORTA DE DESTINO
		set hex_dest [ lindex $net_linha 2 ]
		set hex_ip_d [ string range $hex_dest 0 7 ]
		set ip_dest [ hex_to_dec $hex_ip_d ]
		set porta_dest  [ expr 0x[ string range $hex_dest 9 12 ] ]
		if { [ string first ":" "$ip_local:$porta_local" ] < 11 } {
			set tab "	"
		} else {
			set tab ""
		}
		puts "$ip_local:$porta_local	$tab	$ip_dest:$porta_dest"
	}
	incr cont
}

close $net_file
